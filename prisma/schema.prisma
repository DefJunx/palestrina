generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Conversation {
  id         String @id @default(uuid())
  senderId   String
  receiverId String

  hasNewMessage Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  sender   Profile @relation("sentConversations", fields: [senderId], references: [id])
  receiver Profile @relation("receivedConversations", fields: [receiverId], references: [id])

  messages Message[]

  @@index([senderId])
  @@index([receiverId])
}

model Message {
  id             String @id @default(uuid())
  conversationId String
  senderId       String
  receiverId     String

  title String
  text  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Conversation Conversation @relation(fields: [conversationId], references: [id])
  sender       Profile      @relation("messageSender", fields: [senderId], references: [id])
  receiver     Profile      @relation("messageReceiver", fields: [receiverId], references: [id])

  @@index([conversationId])
  @@index([senderId])
  @@index([receiverId])
}

model Exercise {
  id String @id @default(uuid())

  name      String
  videoPath String
  photoPath String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  trainingProgram TrainingProgram[]
}

model TrainingProgram {
  id        String @id @default(uuid())
  athleteId String

  name         String
  instructions String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profileId String

  Exercise Exercise[]
}

model Profile {
  id     String @id @default(uuid())
  userId String

  username     String?
  fullName     String?
  avatarPath   String?
  fitnessData  Json?
  fitnessNotes String?
  role         UserRole @default(User)
  hasCompiled  Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sentConversations     Conversation[] @relation("sentConversations")
  receivedConversations Conversation[] @relation("receivedConversations")

  sentMessages     Message[] @relation("messageSender")
  receivedMessages Message[] @relation("messageReceiver")

  @@index([userId])
}

enum UserRole {
  User
  Admin
}
