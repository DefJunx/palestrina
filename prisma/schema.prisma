generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Conversation {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  participants Profile[]

  messages               Message[]
  NewMessageNotification NewMessageNotification[]
}

model NewMessageNotification {
  id             String @id @default(uuid())
  conversationId String @unique
  profileId      String @unique

  user         Profile      @relation(fields: [profileId], references: [id], onDelete: Cascade)
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@index([conversationId])
  @@index([profileId])
}

model Message {
  id             String @id @default(uuid())
  conversationId String
  senderId       String

  text String @db.VarChar(250)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Conversation Conversation @relation(fields: [conversationId], references: [id])
  sender       Profile      @relation("messageSender", fields: [senderId], references: [id])

  @@index([conversationId])
  @@index([senderId])
}

model Exercise {
  id String @id @default(uuid())

  name      String
  videoPath String
  photoPath String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  trainingProgram TrainingProgram[]
}

model TrainingProgram {
  id        String @id @default(uuid())
  athleteId String

  name         String
  instructions String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profileId String

  Exercise Exercise[]
}

model Profile {
  id     String @id @default(uuid())
  userId String

  username     String?
  fullName     String?
  avatarPath   String?
  fitnessData  Json?
  fitnessNotes String?  @db.VarChar(600)
  role         UserRole @default(User)
  hasCompiled  Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  conversations Conversation[]

  sentMessages           Message[]                @relation("messageSender")
  newMessageNotification NewMessageNotification[]

  @@index([userId])
}

enum UserRole {
  User
  Admin
}
